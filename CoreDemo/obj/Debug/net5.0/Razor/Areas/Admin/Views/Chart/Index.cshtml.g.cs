#pragma checksum "C:\Users\User\Desktop\C# Projects\CoreDemo\CoreDemo\Areas\Admin\Views\Chart\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f75ac92e91ff298b91948c4eec792932446c11f6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Chart_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Chart/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f75ac92e91ff298b91948c4eec792932446c11f6", @"/Areas/Admin/Views/Chart/Index.cshtml")]
    public class Areas_Admin_Views_Chart_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\User\Desktop\C# Projects\CoreDemo\CoreDemo\Areas\Admin\Views\Chart\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""row"">
    <div class=""col-lg-12"">
        <div id=""chartDiv"" style=""width:800px;height:600px;"">
            <h2>Burası chart alanıdır. Chart buraya gelecek</h2>


        </div>

    </div>

</div>
<!--Chart alanı için script kodları yazalım-->
<script type=""text/javascript"" src=""https://wwww.gstatic.com/charts/loader.js""></script>
<script type=""text/javascript"" src=""https://www.google.com/jsapi""></script>
<script type=""text/javascript"">google.load('visualization', '1.0', { 'packages': ['corechart'] });</script>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        google.charts.load('current', { 'packages': ['corechart'] });//önce google charts kullanımı için paketleri çağırdım
        //fonksiyon çağırılınca çizme işlemi gerçekleşecek
        google.charts.setOnLoadCallback(DrawonLoad);//Bu drawonload fonksiyonunu aşağıda kendimiz yazacağız
        //drawonload fonksiyonunu yazıyorum.
        function DrawonLoad() {
            $(function () {
                //şimdi ajax'i burada kullanacağım
                $.ajax({
                    //Burası çok önemli Çünkü ajax'da da kullanılıyor
                    //gerekli parametreleri yazıyoruz
                    type: 'GET',
                    url: '/Admin/Chart/CategoryChart/',//bu fonksiyon çalıştırıldığında backendde
                    // Admin içinde Chart içinde yer alan CategoryChart fonksiyonunu çağırıp çalıştırsın diyorum.
                    success: function (chartsdata) {//eğer bu CategoryChart'ı yukarıda çağırma işlemi başarılı olursa burada bir
 ");
                WriteLiteral(@"                       //fonksiyon daha çağırsın diyoruz
                        var Data = chartsdata.jsonlist;//backend tarafında CategoryChart metodunda döndürdüğümüz
                        //jsonlist değişkenini bu data değeri tutuyor. Yani gelen değeri tutuyor
                        var data = new google.visualization.DataTable();//datayada görselleştirme için gerekli atamayı yaptım
                        data.addColumn('string', 'categoryName');//grafiğe iki sütun eklenecek. Birisi string türü için
                        //string tür olduğunu belirtiyorum. bu kısıma grafiğe çekeceğimiz alanın string değerini veriyoruz.
                        //Yani categoryname gelecek
                        data.addColumn('number', 'categoryCount');//Buda çekeceğim sayısal alan olacak
                        //oda number türünden olacak. Ve categoryCount gelecek
                        //her bir data için grafiğe yansıtmak için döngüde alıyorum
                        for (var i = 0; i < Data.length; i+");
                WriteLiteral(@"+) {
                            data.addRow([Data[i].categoryName, Data[i].categoryCount]);//Bana her bir data için kaç data varsa
                            //Data'dan gelen değerin categoryName ve categoryCount değerlerini al dedim.

                        }
                        //şimdi chart'ın çizilmesi işlemini yazalım
                        var chart = new google.visualization.PieChart(document.getElementById('chartDiv'));
                        //chartımın türüne belirterek chartın geleceği alan chartdiv'in id'sini verdim.
                        //chart pie türünden olsun dedim
                        chart.draw(data,
                            //chartı burada çiziyoruz
                            {
                                title: ""Google Chart Core Projesi"",
                                position: ""top"",
                                fontsize: ""16px""

                            }
                        );



                    }

                });


");
                WriteLiteral("            });\r\n\r\n        }\r\n\r\n\r\n    </script>\r\n\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
